image: node

variables:
  PACKAGE_NAME: pf1
  PACKAGE_TYPE: system
  PACKAGE_REGISTRY_URL: $CI_API_V4_URL/projects/$CI_PROJECT_ID/packages/generic/$PACKAGE_NAME

stages:
  - check
  - build
  - prepare-release
  - release
  - publish

cache: &global_cache
  paths:
    - .npm

lint:
  stage: check
  before_script:
    - npm ci --cache .npm --prefer-offline
  script:
    - npm run lint
    - npm run format:check
  cache:
    <<: *global_cache

build:
  stage: build
  before_script:
    - npm ci --cache .npm --prefer-offline
    - apt --yes update
    - apt --yes install jq
  script: |
    jq '.version = $version | .url = $url | .manifest = $manifest | .download = $download' \
    --arg version "${CI_COMMIT_TAG:1}" \
    --arg url "$CI_PROJECT_URL" \
    --arg manifest "$CI_PROJECT_URL/-/releases/permalink/latest/downloads/$PACKAGE_TYPE.json" \
    --arg download "$CI_PROJECT_URL/-/releases/$CI_COMMIT_TAG/downloads/$PACKAGE_NAME.zip" \
    public/$PACKAGE_TYPE.json > src/tmp.$$.json
    mv src/tmp.$$.json src/$PACKAGE_TYPE.json
    npm run build
  cache:
    <<: *global_cache
  artifacts:
    paths:
      - dist
    expire_in: 1 week
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v[0-9]+\.[0-9]+\.[0-9]+$/'

publish_artifacts:
  stage: prepare-release
  image: alpine:latest
  before_script:
    - apk update
    - apk add zip curl ripgrep
  script: |
    cd dist
    zip -r ../$PACKAGE_NAME.zip .
    cd ..
    curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file $PACKAGE_NAME.zip "$PACKAGE_REGISTRY_URL/$CI_COMMIT_TAG/$PACKAGE_NAME.zip"
    curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file dist/$PACKAGE_TYPE.json "$PACKAGE_REGISTRY_URL/$CI_COMMIT_TAG/$PACKAGE_TYPE.json"
    echo "LATEST=$(rg -U --multiline-dotall '(?P<latest>^[#]{2}\sv?\d.*?)(?:\n^[#]{1,3}\sv?\d.*)' -r '$latest' CHANGELOG.md)" >> variables.env
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v[0-9]+\.[0-9]+\.[0-9]+$/'
  artifacts:
    reports:
      dotenv: variables.env

release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  needs:
    - publish_artifacts
  script:
    - echo 'release job'
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v[0-9]+\.[0-9]+\.[0-9]+$/'
  release:
    name: ${CI_COMMIT_TAG:1}
    tag_name: $CI_COMMIT_TAG
    description: "**Manifest URL:** $CI_PROJECT_URL/-/releases/$CI_COMMIT_TAG/downloads/$PACKAGE_TYPE.json\r\n\r\n$LATEST"
    assets:
      links:
        - name: "$PACKAGE_NAME.zip"
          url: "$PACKAGE_REGISTRY_URL/$CI_COMMIT_TAG/$PACKAGE_NAME.zip"
          filepath: /$PACKAGE_NAME.zip
          link_type: package
        - name: "$PACKAGE_TYPE.json"
          url: "$PACKAGE_REGISTRY_URL/$CI_COMMIT_TAG/$PACKAGE_TYPE.json"
          filepath: /$PACKAGE_TYPE.json
          link_type: other
