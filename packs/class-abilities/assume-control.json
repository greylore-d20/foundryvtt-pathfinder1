{
  "_id": "EzZ8XZHjMCBwaL5o",
  "name": "Assume Control",
  "type": "feat",
  "img": "systems/pf1/icons/spells/evil-eye-eerie-3.jpg",
  "sort": 0,
  "flags": {},
  "system": {
    "description": {
      "value": "<p>At 1st level, you can attempt to gain control over a summoned creature by disrupting the bond between it and the caster who summoned it. You must make a caster level check (1d20 + caster level) equal to 10 + the summoning caster’s level. If you know the summoned creature’s name, you receive a +2 <em>circumstance bonus</em> on the check. If the check is successful, you can control the summoned creature as if you had summoned it for a number of rounds equal to 1/2 your <em>wizard</em> level (minimum 1 round). This does not increase the duration of the original summoning. The original summoning caster can attempt to regain control of the summoned creature as a <em>standard action</em> by making a caster level check against your caster level + 10. When your control ends, the creature reverts to the control of its <em>summoner</em>.</p>\n<p>At 9th level, you can use this ability to bargain with called creatures as if you were the caster who conjured them. You can use this ability a number of times per day equal to 3 + your <em>Intelligence</em> modifier.</p>"
    },
    "tags": [],
    "actions": [
      {
        "_id": "lp5ht6x91in3034v",
        "name": "Use",
        "img": "systems/pf1/icons/spells/evil-eye-eerie-3.jpg",
        "description": "",
        "tag": "",
        "activation": {
          "cost": 1,
          "type": "free"
        },
        "unchainedAction": {
          "activation": {
            "cost": 1,
            "type": "free"
          }
        },
        "duration": {
          "value": "floor(@classes.wizard.level / 2)",
          "units": "round"
        },
        "target": {
          "value": "Summoned Creature"
        },
        "range": {
          "value": null,
          "units": "seeText",
          "maxIncrements": 1,
          "minValue": null,
          "minUnits": ""
        },
        "uses": {
          "autoDeductChargesCost": "",
          "self": {
            "value": 0,
            "maxFormula": "",
            "per": null
          },
          "per": "day",
          "value": 0,
          "maxFormula": "3 + @abilities.int.mod"
        },
        "measureTemplate": {
          "type": "",
          "size": "0",
          "overrideColor": false,
          "customColor": "",
          "overrideTexture": false,
          "customTexture": ""
        },
        "attackName": "",
        "actionType": "",
        "attackBonus": "",
        "critConfirmBonus": "",
        "damage": {
          "parts": [],
          "critParts": [],
          "nonCritParts": []
        },
        "attackParts": [],
        "formulaicAttacks": {
          "count": {
            "formula": ""
          },
          "bonus": {
            "formula": ""
          },
          "label": null
        },
        "formula": "",
        "ability": {
          "attack": null,
          "damage": null,
          "damageMult": 1,
          "critRange": 20,
          "critMult": 2
        },
        "save": {
          "dc": 0,
          "type": "",
          "description": ""
        },
        "effectNotes": [],
        "attackNotes": [],
        "soundEffect": "",
        "powerAttack": {
          "multiplier": "",
          "damageBonus": 2,
          "critMultiplier": 1
        },
        "naturalAttack": {
          "primaryAttack": true,
          "secondary": {
            "attackBonus": "-5",
            "damageMult": 0.5
          }
        },
        "nonlethal": false,
        "usesAmmo": false,
        "spellEffect": "",
        "spellArea": "",
        "conditionals": [],
        "enh": {
          "value": null
        }
      }
    ],
    "uses": {
      "per": "day",
      "maxFormula": "3 + @abilities.int.mod"
    },
    "attackNotes": [],
    "effectNotes": [],
    "changes": [],
    "contextNotes": [],
    "links": {
      "children": [],
      "charges": []
    },
    "tag": "classFeat_assumeControl",
    "useCustomTag": true,
    "armorProf": {
      "value": []
    },
    "weaponProf": {
      "value": []
    },
    "languages": {
      "value": []
    },
    "scriptCalls": [],
    "subType": "classFeat",
    "associations": {
      "classes": [["Wizard"]]
    },
    "abilityType": "su"
  }
}
